$date
	Fri Aug 29 11:17:57 2025
$end
$version
	QuestaSim Version 2024.3_1
$end
$timescale
	1ps
$end

$scope module tb_bitreversal $end
$var integer 32 ! i $end
$var wire 1 " done_flag_o $end
$var wire 1 # dout_o [31] $end
$var wire 1 $ dout_o [30] $end
$var wire 1 % dout_o [29] $end
$var wire 1 & dout_o [28] $end
$var wire 1 ' dout_o [27] $end
$var wire 1 ( dout_o [26] $end
$var wire 1 ) dout_o [25] $end
$var wire 1 * dout_o [24] $end
$var wire 1 + dout_o [23] $end
$var wire 1 , dout_o [22] $end
$var wire 1 - dout_o [21] $end
$var wire 1 . dout_o [20] $end
$var wire 1 / dout_o [19] $end
$var wire 1 0 dout_o [18] $end
$var wire 1 1 dout_o [17] $end
$var wire 1 2 dout_o [16] $end
$var wire 1 3 dout_o [15] $end
$var wire 1 4 dout_o [14] $end
$var wire 1 5 dout_o [13] $end
$var wire 1 6 dout_o [12] $end
$var wire 1 7 dout_o [11] $end
$var wire 1 8 dout_o [10] $end
$var wire 1 9 dout_o [9] $end
$var wire 1 : dout_o [8] $end
$var wire 1 ; dout_o [7] $end
$var wire 1 < dout_o [6] $end
$var wire 1 = dout_o [5] $end
$var wire 1 > dout_o [4] $end
$var wire 1 ? dout_o [3] $end
$var wire 1 @ dout_o [2] $end
$var wire 1 A dout_o [1] $end
$var wire 1 B dout_o [0] $end
$var reg 1 C clk $end
$var reg 32 D din_i [31:0] $end
$var reg 1 E read_i $end
$var reg 1 F reset $end
$var reg 1 G start_flag_i $end
$var reg 1 H write_i $end

$scope module dut $end
$var wire 1 I clk $end
$var wire 1 J din_i [31] $end
$var wire 1 K din_i [30] $end
$var wire 1 L din_i [29] $end
$var wire 1 M din_i [28] $end
$var wire 1 N din_i [27] $end
$var wire 1 O din_i [26] $end
$var wire 1 P din_i [25] $end
$var wire 1 Q din_i [24] $end
$var wire 1 R din_i [23] $end
$var wire 1 S din_i [22] $end
$var wire 1 T din_i [21] $end
$var wire 1 U din_i [20] $end
$var wire 1 V din_i [19] $end
$var wire 1 W din_i [18] $end
$var wire 1 X din_i [17] $end
$var wire 1 Y din_i [16] $end
$var wire 1 Z din_i [15] $end
$var wire 1 [ din_i [14] $end
$var wire 1 \ din_i [13] $end
$var wire 1 ] din_i [12] $end
$var wire 1 ^ din_i [11] $end
$var wire 1 _ din_i [10] $end
$var wire 1 ` din_i [9] $end
$var wire 1 a din_i [8] $end
$var wire 1 b din_i [7] $end
$var wire 1 c din_i [6] $end
$var wire 1 d din_i [5] $end
$var wire 1 e din_i [4] $end
$var wire 1 f din_i [3] $end
$var wire 1 g din_i [2] $end
$var wire 1 h din_i [1] $end
$var wire 1 i din_i [0] $end
$var wire 1 j read_i $end
$var wire 1 k reset $end
$var wire 1 l start_flag_i $end
$var wire 1 m write_i $end
$var reg 1 n already_read $end
$var reg 1 o already_written $end
$var reg 1 p done_flag_o $end
$var reg 32 q dout_o [31:0] $end
$var reg 1 r internal_read $end
$var reg 1 s internal_rst $end
$var reg 1 t internal_write $end
$var reg 2 u read_cnt [1:0] $end
$var reg 2 v rst_cnt [1:0] $end
$var reg 2 w write_cnt [1:0] $end

$scope module design_1_i $end
$var wire 1 x Net $end
$var wire 1 y axis2fifo_0_done $end
$var wire 1 z axis2fifo_0_dout [31] $end
$var wire 1 { axis2fifo_0_dout [30] $end
$var wire 1 | axis2fifo_0_dout [29] $end
$var wire 1 } axis2fifo_0_dout [28] $end
$var wire 1 ~ axis2fifo_0_dout [27] $end
$var wire 1 !! axis2fifo_0_dout [26] $end
$var wire 1 "! axis2fifo_0_dout [25] $end
$var wire 1 #! axis2fifo_0_dout [24] $end
$var wire 1 $! axis2fifo_0_dout [23] $end
$var wire 1 %! axis2fifo_0_dout [22] $end
$var wire 1 &! axis2fifo_0_dout [21] $end
$var wire 1 '! axis2fifo_0_dout [20] $end
$var wire 1 (! axis2fifo_0_dout [19] $end
$var wire 1 )! axis2fifo_0_dout [18] $end
$var wire 1 *! axis2fifo_0_dout [17] $end
$var wire 1 +! axis2fifo_0_dout [16] $end
$var wire 1 ,! axis2fifo_0_dout [15] $end
$var wire 1 -! axis2fifo_0_dout [14] $end
$var wire 1 .! axis2fifo_0_dout [13] $end
$var wire 1 /! axis2fifo_0_dout [12] $end
$var wire 1 0! axis2fifo_0_dout [11] $end
$var wire 1 1! axis2fifo_0_dout [10] $end
$var wire 1 2! axis2fifo_0_dout [9] $end
$var wire 1 3! axis2fifo_0_dout [8] $end
$var wire 1 4! axis2fifo_0_dout [7] $end
$var wire 1 5! axis2fifo_0_dout [6] $end
$var wire 1 6! axis2fifo_0_dout [5] $end
$var wire 1 7! axis2fifo_0_dout [4] $end
$var wire 1 8! axis2fifo_0_dout [3] $end
$var wire 1 9! axis2fifo_0_dout [2] $end
$var wire 1 :! axis2fifo_0_dout [1] $end
$var wire 1 ;! axis2fifo_0_dout [0] $end
$var wire 1 <! bit_reverse_accel_1_m_axis_TDATA [31] $end
$var wire 1 =! bit_reverse_accel_1_m_axis_TDATA [30] $end
$var wire 1 >! bit_reverse_accel_1_m_axis_TDATA [29] $end
$var wire 1 ?! bit_reverse_accel_1_m_axis_TDATA [28] $end
$var wire 1 @! bit_reverse_accel_1_m_axis_TDATA [27] $end
$var wire 1 A! bit_reverse_accel_1_m_axis_TDATA [26] $end
$var wire 1 B! bit_reverse_accel_1_m_axis_TDATA [25] $end
$var wire 1 C! bit_reverse_accel_1_m_axis_TDATA [24] $end
$var wire 1 D! bit_reverse_accel_1_m_axis_TDATA [23] $end
$var wire 1 E! bit_reverse_accel_1_m_axis_TDATA [22] $end
$var wire 1 F! bit_reverse_accel_1_m_axis_TDATA [21] $end
$var wire 1 G! bit_reverse_accel_1_m_axis_TDATA [20] $end
$var wire 1 H! bit_reverse_accel_1_m_axis_TDATA [19] $end
$var wire 1 I! bit_reverse_accel_1_m_axis_TDATA [18] $end
$var wire 1 J! bit_reverse_accel_1_m_axis_TDATA [17] $end
$var wire 1 K! bit_reverse_accel_1_m_axis_TDATA [16] $end
$var wire 1 L! bit_reverse_accel_1_m_axis_TDATA [15] $end
$var wire 1 M! bit_reverse_accel_1_m_axis_TDATA [14] $end
$var wire 1 N! bit_reverse_accel_1_m_axis_TDATA [13] $end
$var wire 1 O! bit_reverse_accel_1_m_axis_TDATA [12] $end
$var wire 1 P! bit_reverse_accel_1_m_axis_TDATA [11] $end
$var wire 1 Q! bit_reverse_accel_1_m_axis_TDATA [10] $end
$var wire 1 R! bit_reverse_accel_1_m_axis_TDATA [9] $end
$var wire 1 S! bit_reverse_accel_1_m_axis_TDATA [8] $end
$var wire 1 T! bit_reverse_accel_1_m_axis_TDATA [7] $end
$var wire 1 U! bit_reverse_accel_1_m_axis_TDATA [6] $end
$var wire 1 V! bit_reverse_accel_1_m_axis_TDATA [5] $end
$var wire 1 W! bit_reverse_accel_1_m_axis_TDATA [4] $end
$var wire 1 X! bit_reverse_accel_1_m_axis_TDATA [3] $end
$var wire 1 Y! bit_reverse_accel_1_m_axis_TDATA [2] $end
$var wire 1 Z! bit_reverse_accel_1_m_axis_TDATA [1] $end
$var wire 1 [! bit_reverse_accel_1_m_axis_TDATA [0] $end
$var wire 1 \! bit_reverse_accel_1_m_axis_TLAST $end
$var wire 1 ]! bit_reverse_accel_1_m_axis_TVALID $end
$var wire 1 ^! bit_reverse_accel_1_s_axis_TREADY $end
$var wire 1 I clk $end
$var wire 1 _! clk_0_1 $end
$var wire 1 J din_i [31] $end
$var wire 1 K din_i [30] $end
$var wire 1 L din_i [29] $end
$var wire 1 M din_i [28] $end
$var wire 1 N din_i [27] $end
$var wire 1 O din_i [26] $end
$var wire 1 P din_i [25] $end
$var wire 1 Q din_i [24] $end
$var wire 1 R din_i [23] $end
$var wire 1 S din_i [22] $end
$var wire 1 T din_i [21] $end
$var wire 1 U din_i [20] $end
$var wire 1 V din_i [19] $end
$var wire 1 W din_i [18] $end
$var wire 1 X din_i [17] $end
$var wire 1 Y din_i [16] $end
$var wire 1 Z din_i [15] $end
$var wire 1 [ din_i [14] $end
$var wire 1 \ din_i [13] $end
$var wire 1 ] din_i [12] $end
$var wire 1 ^ din_i [11] $end
$var wire 1 _ din_i [10] $end
$var wire 1 ` din_i [9] $end
$var wire 1 a din_i [8] $end
$var wire 1 b din_i [7] $end
$var wire 1 c din_i [6] $end
$var wire 1 d din_i [5] $end
$var wire 1 e din_i [4] $end
$var wire 1 f din_i [3] $end
$var wire 1 g din_i [2] $end
$var wire 1 h din_i [1] $end
$var wire 1 i din_i [0] $end
$var wire 1 `! done_flag_o $end
$var wire 1 a! dout_o [31] $end
$var wire 1 b! dout_o [30] $end
$var wire 1 c! dout_o [29] $end
$var wire 1 d! dout_o [28] $end
$var wire 1 e! dout_o [27] $end
$var wire 1 f! dout_o [26] $end
$var wire 1 g! dout_o [25] $end
$var wire 1 h! dout_o [24] $end
$var wire 1 i! dout_o [23] $end
$var wire 1 j! dout_o [22] $end
$var wire 1 k! dout_o [21] $end
$var wire 1 l! dout_o [20] $end
$var wire 1 m! dout_o [19] $end
$var wire 1 n! dout_o [18] $end
$var wire 1 o! dout_o [17] $end
$var wire 1 p! dout_o [16] $end
$var wire 1 q! dout_o [15] $end
$var wire 1 r! dout_o [14] $end
$var wire 1 s! dout_o [13] $end
$var wire 1 t! dout_o [12] $end
$var wire 1 u! dout_o [11] $end
$var wire 1 v! dout_o [10] $end
$var wire 1 w! dout_o [9] $end
$var wire 1 x! dout_o [8] $end
$var wire 1 y! dout_o [7] $end
$var wire 1 z! dout_o [6] $end
$var wire 1 {! dout_o [5] $end
$var wire 1 |! dout_o [4] $end
$var wire 1 }! dout_o [3] $end
$var wire 1 ~! dout_o [2] $end
$var wire 1 !" dout_o [1] $end
$var wire 1 "" dout_o [0] $end
$var wire 1 #" fifo2axis_0_s_axis_tdata [31] $end
$var wire 1 $" fifo2axis_0_s_axis_tdata [30] $end
$var wire 1 %" fifo2axis_0_s_axis_tdata [29] $end
$var wire 1 &" fifo2axis_0_s_axis_tdata [28] $end
$var wire 1 '" fifo2axis_0_s_axis_tdata [27] $end
$var wire 1 (" fifo2axis_0_s_axis_tdata [26] $end
$var wire 1 )" fifo2axis_0_s_axis_tdata [25] $end
$var wire 1 *" fifo2axis_0_s_axis_tdata [24] $end
$var wire 1 +" fifo2axis_0_s_axis_tdata [23] $end
$var wire 1 ," fifo2axis_0_s_axis_tdata [22] $end
$var wire 1 -" fifo2axis_0_s_axis_tdata [21] $end
$var wire 1 ." fifo2axis_0_s_axis_tdata [20] $end
$var wire 1 /" fifo2axis_0_s_axis_tdata [19] $end
$var wire 1 0" fifo2axis_0_s_axis_tdata [18] $end
$var wire 1 1" fifo2axis_0_s_axis_tdata [17] $end
$var wire 1 2" fifo2axis_0_s_axis_tdata [16] $end
$var wire 1 3" fifo2axis_0_s_axis_tdata [15] $end
$var wire 1 4" fifo2axis_0_s_axis_tdata [14] $end
$var wire 1 5" fifo2axis_0_s_axis_tdata [13] $end
$var wire 1 6" fifo2axis_0_s_axis_tdata [12] $end
$var wire 1 7" fifo2axis_0_s_axis_tdata [11] $end
$var wire 1 8" fifo2axis_0_s_axis_tdata [10] $end
$var wire 1 9" fifo2axis_0_s_axis_tdata [9] $end
$var wire 1 :" fifo2axis_0_s_axis_tdata [8] $end
$var wire 1 ;" fifo2axis_0_s_axis_tdata [7] $end
$var wire 1 <" fifo2axis_0_s_axis_tdata [6] $end
$var wire 1 =" fifo2axis_0_s_axis_tdata [5] $end
$var wire 1 >" fifo2axis_0_s_axis_tdata [4] $end
$var wire 1 ?" fifo2axis_0_s_axis_tdata [3] $end
$var wire 1 @" fifo2axis_0_s_axis_tdata [2] $end
$var wire 1 A" fifo2axis_0_s_axis_tdata [1] $end
$var wire 1 B" fifo2axis_0_s_axis_tdata [0] $end
$var wire 1 C" fifo2axis_0_s_axis_tvalid $end
$var wire 1 D" fifo2axis_0_start_accel $end
$var wire 1 E" fifo_data_0_1 [31] $end
$var wire 1 F" fifo_data_0_1 [30] $end
$var wire 1 G" fifo_data_0_1 [29] $end
$var wire 1 H" fifo_data_0_1 [28] $end
$var wire 1 I" fifo_data_0_1 [27] $end
$var wire 1 J" fifo_data_0_1 [26] $end
$var wire 1 K" fifo_data_0_1 [25] $end
$var wire 1 L" fifo_data_0_1 [24] $end
$var wire 1 M" fifo_data_0_1 [23] $end
$var wire 1 N" fifo_data_0_1 [22] $end
$var wire 1 O" fifo_data_0_1 [21] $end
$var wire 1 P" fifo_data_0_1 [20] $end
$var wire 1 Q" fifo_data_0_1 [19] $end
$var wire 1 R" fifo_data_0_1 [18] $end
$var wire 1 S" fifo_data_0_1 [17] $end
$var wire 1 T" fifo_data_0_1 [16] $end
$var wire 1 U" fifo_data_0_1 [15] $end
$var wire 1 V" fifo_data_0_1 [14] $end
$var wire 1 W" fifo_data_0_1 [13] $end
$var wire 1 X" fifo_data_0_1 [12] $end
$var wire 1 Y" fifo_data_0_1 [11] $end
$var wire 1 Z" fifo_data_0_1 [10] $end
$var wire 1 [" fifo_data_0_1 [9] $end
$var wire 1 \" fifo_data_0_1 [8] $end
$var wire 1 ]" fifo_data_0_1 [7] $end
$var wire 1 ^" fifo_data_0_1 [6] $end
$var wire 1 _" fifo_data_0_1 [5] $end
$var wire 1 `" fifo_data_0_1 [4] $end
$var wire 1 a" fifo_data_0_1 [3] $end
$var wire 1 b" fifo_data_0_1 [2] $end
$var wire 1 c" fifo_data_0_1 [1] $end
$var wire 1 d" fifo_data_0_1 [0] $end
$var wire 1 e" read_0_1 $end
$var wire 1 f" read_i $end
$var wire 1 k reset $end
$var wire 1 g" rst_0_1 $end
$var wire 1 h" start_0_1 $end
$var wire 1 l start_flag_i $end
$var wire 1 i" write_0_1 $end
$var wire 1 j" write_i $end

$scope module axis2fifo_0 $end
$var integer 32 k" i $end
$var wire 1 _! clk $end
$var wire 1 \! last $end
$var wire 1 e" read $end
$var wire 1 <! result_data [31] $end
$var wire 1 =! result_data [30] $end
$var wire 1 >! result_data [29] $end
$var wire 1 ?! result_data [28] $end
$var wire 1 @! result_data [27] $end
$var wire 1 A! result_data [26] $end
$var wire 1 B! result_data [25] $end
$var wire 1 C! result_data [24] $end
$var wire 1 D! result_data [23] $end
$var wire 1 E! result_data [22] $end
$var wire 1 F! result_data [21] $end
$var wire 1 G! result_data [20] $end
$var wire 1 H! result_data [19] $end
$var wire 1 I! result_data [18] $end
$var wire 1 J! result_data [17] $end
$var wire 1 K! result_data [16] $end
$var wire 1 L! result_data [15] $end
$var wire 1 M! result_data [14] $end
$var wire 1 N! result_data [13] $end
$var wire 1 O! result_data [12] $end
$var wire 1 P! result_data [11] $end
$var wire 1 Q! result_data [10] $end
$var wire 1 R! result_data [9] $end
$var wire 1 S! result_data [8] $end
$var wire 1 T! result_data [7] $end
$var wire 1 U! result_data [6] $end
$var wire 1 V! result_data [5] $end
$var wire 1 W! result_data [4] $end
$var wire 1 X! result_data [3] $end
$var wire 1 Y! result_data [2] $end
$var wire 1 Z! result_data [1] $end
$var wire 1 [! result_data [0] $end
$var wire 1 g" rst $end
$var wire 1 ]! valid_result $end
$var parameter 32 l" DATA_WIDTH $end
$var parameter 32 m" DEPTH $end
$var parameter 3 n" DONE $end
$var parameter 3 o" IDLE $end
$var parameter 3 p" READ_STREAM $end
$var parameter 3 q" SEND_OUTSIDE $end
$var parameter 32 r" THRESHOLD $end
$var reg 2 s" buffer_index [1:0] $end
$var reg 1 t" done $end
$var reg 32 u" dout [31:0] $end
$var reg 3 v" next_state [2:0] $end
$var reg 1 w" ready_for_results $end
$var reg 3 x" state [2:0] $end
$upscope $end

$scope module bit_reverse_accel_1 $end
$var integer 32 y" ap_tvar_int_0 $end
$var wire 1 z" ap_CS_fsm_pp0_stage0 $end
$var wire 1 {" ap_CS_fsm_pp0_stage1 $end
$var wire 1 |" ap_CS_fsm_pp0_stage2 $end
$var wire 1 }" ap_CS_fsm_pp0_stage3 $end
$var wire 1 ~" ap_block_pp0_stage0 $end
$var wire 1 !# ap_block_pp0_stage1 $end
$var wire 1 "# ap_block_pp0_stage2 $end
$var wire 1 ## ap_block_pp0_stage3 $end
$var wire 1 $# ap_ce_reg $end
$var wire 1 _! ap_clk $end
$var wire 1 %# ap_enable_pp0 $end
$var wire 1 &# ap_reset_idle_pp0 $end
$var wire 1 D" ap_rst_n $end
$var wire 1 <! m_axis_TDATA [31] $end
$var wire 1 =! m_axis_TDATA [30] $end
$var wire 1 >! m_axis_TDATA [29] $end
$var wire 1 ?! m_axis_TDATA [28] $end
$var wire 1 @! m_axis_TDATA [27] $end
$var wire 1 A! m_axis_TDATA [26] $end
$var wire 1 B! m_axis_TDATA [25] $end
$var wire 1 C! m_axis_TDATA [24] $end
$var wire 1 D! m_axis_TDATA [23] $end
$var wire 1 E! m_axis_TDATA [22] $end
$var wire 1 F! m_axis_TDATA [21] $end
$var wire 1 G! m_axis_TDATA [20] $end
$var wire 1 H! m_axis_TDATA [19] $end
$var wire 1 I! m_axis_TDATA [18] $end
$var wire 1 J! m_axis_TDATA [17] $end
$var wire 1 K! m_axis_TDATA [16] $end
$var wire 1 L! m_axis_TDATA [15] $end
$var wire 1 M! m_axis_TDATA [14] $end
$var wire 1 N! m_axis_TDATA [13] $end
$var wire 1 O! m_axis_TDATA [12] $end
$var wire 1 P! m_axis_TDATA [11] $end
$var wire 1 Q! m_axis_TDATA [10] $end
$var wire 1 R! m_axis_TDATA [9] $end
$var wire 1 S! m_axis_TDATA [8] $end
$var wire 1 T! m_axis_TDATA [7] $end
$var wire 1 U! m_axis_TDATA [6] $end
$var wire 1 V! m_axis_TDATA [5] $end
$var wire 1 W! m_axis_TDATA [4] $end
$var wire 1 X! m_axis_TDATA [3] $end
$var wire 1 Y! m_axis_TDATA [2] $end
$var wire 1 Z! m_axis_TDATA [1] $end
$var wire 1 [! m_axis_TDATA [0] $end
$var wire 1 '# m_axis_TKEEP [3] $end
$var wire 1 (# m_axis_TKEEP [2] $end
$var wire 1 )# m_axis_TKEEP [1] $end
$var wire 1 *# m_axis_TKEEP [0] $end
$var wire 1 +# m_axis_TKEEP_int_regslice [3] $end
$var wire 1 ,# m_axis_TKEEP_int_regslice [2] $end
$var wire 1 -# m_axis_TKEEP_int_regslice [1] $end
$var wire 1 .# m_axis_TKEEP_int_regslice [0] $end
$var wire 1 \! m_axis_TLAST $end
$var wire 1 x m_axis_TREADY $end
$var wire 1 /# m_axis_TREADY_int_regslice $end
$var wire 1 0# m_axis_TSTRB [3] $end
$var wire 1 1# m_axis_TSTRB [2] $end
$var wire 1 2# m_axis_TSTRB [1] $end
$var wire 1 3# m_axis_TSTRB [0] $end
$var wire 1 4# m_axis_TSTRB_int_regslice [3] $end
$var wire 1 5# m_axis_TSTRB_int_regslice [2] $end
$var wire 1 6# m_axis_TSTRB_int_regslice [1] $end
$var wire 1 7# m_axis_TSTRB_int_regslice [0] $end
$var wire 1 ]! m_axis_TVALID $end
$var wire 1 8# regslice_both_m_axis_V_data_V_U_apdone_blk $end
$var wire 1 9# regslice_both_m_axis_V_data_V_U_vld_out $end
$var wire 1 :# regslice_both_m_axis_V_keep_V_U_ack_in_dummy $end
$var wire 1 ;# regslice_both_m_axis_V_keep_V_U_apdone_blk $end
$var wire 1 <# regslice_both_m_axis_V_keep_V_U_vld_out $end
$var wire 1 =# regslice_both_m_axis_V_last_V_U_ack_in_dummy $end
$var wire 1 ># regslice_both_m_axis_V_last_V_U_apdone_blk $end
$var wire 1 ?# regslice_both_m_axis_V_last_V_U_vld_out $end
$var wire 1 @# regslice_both_m_axis_V_strb_V_U_ack_in_dummy $end
$var wire 1 A# regslice_both_m_axis_V_strb_V_U_apdone_blk $end
$var wire 1 B# regslice_both_m_axis_V_strb_V_U_vld_out $end
$var wire 1 C# regslice_both_s_axis_V_data_V_U_ack_in $end
$var wire 1 D# regslice_both_s_axis_V_data_V_U_apdone_blk $end
$var wire 1 E# regslice_both_s_axis_V_keep_V_U_ack_in $end
$var wire 1 F# regslice_both_s_axis_V_keep_V_U_apdone_blk $end
$var wire 1 G# regslice_both_s_axis_V_keep_V_U_vld_out $end
$var wire 1 H# regslice_both_s_axis_V_last_V_U_ack_in $end
$var wire 1 I# regslice_both_s_axis_V_last_V_U_apdone_blk $end
$var wire 1 J# regslice_both_s_axis_V_last_V_U_vld_out $end
$var wire 1 K# regslice_both_s_axis_V_strb_V_U_ack_in $end
$var wire 1 L# regslice_both_s_axis_V_strb_V_U_apdone_blk $end
$var wire 1 M# regslice_both_s_axis_V_strb_V_U_vld_out $end
$var wire 1 #" s_axis_TDATA [31] $end
$var wire 1 $" s_axis_TDATA [30] $end
$var wire 1 %" s_axis_TDATA [29] $end
$var wire 1 &" s_axis_TDATA [28] $end
$var wire 1 '" s_axis_TDATA [27] $end
$var wire 1 (" s_axis_TDATA [26] $end
$var wire 1 )" s_axis_TDATA [25] $end
$var wire 1 *" s_axis_TDATA [24] $end
$var wire 1 +" s_axis_TDATA [23] $end
$var wire 1 ," s_axis_TDATA [22] $end
$var wire 1 -" s_axis_TDATA [21] $end
$var wire 1 ." s_axis_TDATA [20] $end
$var wire 1 /" s_axis_TDATA [19] $end
$var wire 1 0" s_axis_TDATA [18] $end
$var wire 1 1" s_axis_TDATA [17] $end
$var wire 1 2" s_axis_TDATA [16] $end
$var wire 1 3" s_axis_TDATA [15] $end
$var wire 1 4" s_axis_TDATA [14] $end
$var wire 1 5" s_axis_TDATA [13] $end
$var wire 1 6" s_axis_TDATA [12] $end
$var wire 1 7" s_axis_TDATA [11] $end
$var wire 1 8" s_axis_TDATA [10] $end
$var wire 1 9" s_axis_TDATA [9] $end
$var wire 1 :" s_axis_TDATA [8] $end
$var wire 1 ;" s_axis_TDATA [7] $end
$var wire 1 <" s_axis_TDATA [6] $end
$var wire 1 =" s_axis_TDATA [5] $end
$var wire 1 >" s_axis_TDATA [4] $end
$var wire 1 ?" s_axis_TDATA [3] $end
$var wire 1 @" s_axis_TDATA [2] $end
$var wire 1 A" s_axis_TDATA [1] $end
$var wire 1 B" s_axis_TDATA [0] $end
$var wire 1 N# s_axis_TDATA_int_regslice [31] $end
$var wire 1 O# s_axis_TDATA_int_regslice [30] $end
$var wire 1 P# s_axis_TDATA_int_regslice [29] $end
$var wire 1 Q# s_axis_TDATA_int_regslice [28] $end
$var wire 1 R# s_axis_TDATA_int_regslice [27] $end
$var wire 1 S# s_axis_TDATA_int_regslice [26] $end
$var wire 1 T# s_axis_TDATA_int_regslice [25] $end
$var wire 1 U# s_axis_TDATA_int_regslice [24] $end
$var wire 1 V# s_axis_TDATA_int_regslice [23] $end
$var wire 1 W# s_axis_TDATA_int_regslice [22] $end
$var wire 1 X# s_axis_TDATA_int_regslice [21] $end
$var wire 1 Y# s_axis_TDATA_int_regslice [20] $end
$var wire 1 Z# s_axis_TDATA_int_regslice [19] $end
$var wire 1 [# s_axis_TDATA_int_regslice [18] $end
$var wire 1 \# s_axis_TDATA_int_regslice [17] $end
$var wire 1 ]# s_axis_TDATA_int_regslice [16] $end
$var wire 1 ^# s_axis_TDATA_int_regslice [15] $end
$var wire 1 _# s_axis_TDATA_int_regslice [14] $end
$var wire 1 `# s_axis_TDATA_int_regslice [13] $end
$var wire 1 a# s_axis_TDATA_int_regslice [12] $end
$var wire 1 b# s_axis_TDATA_int_regslice [11] $end
$var wire 1 c# s_axis_TDATA_int_regslice [10] $end
$var wire 1 d# s_axis_TDATA_int_regslice [9] $end
$var wire 1 e# s_axis_TDATA_int_regslice [8] $end
$var wire 1 f# s_axis_TDATA_int_regslice [7] $end
$var wire 1 g# s_axis_TDATA_int_regslice [6] $end
$var wire 1 h# s_axis_TDATA_int_regslice [5] $end
$var wire 1 i# s_axis_TDATA_int_regslice [4] $end
$var wire 1 j# s_axis_TDATA_int_regslice [3] $end
$var wire 1 k# s_axis_TDATA_int_regslice [2] $end
$var wire 1 l# s_axis_TDATA_int_regslice [1] $end
$var wire 1 m# s_axis_TDATA_int_regslice [0] $end
$var wire 1 n# s_axis_TKEEP [3] $end
$var wire 1 o# s_axis_TKEEP [2] $end
$var wire 1 p# s_axis_TKEEP [1] $end
$var wire 1 q# s_axis_TKEEP [0] $end
$var wire 1 r# s_axis_TKEEP_int_regslice [3] $end
$var wire 1 s# s_axis_TKEEP_int_regslice [2] $end
$var wire 1 t# s_axis_TKEEP_int_regslice [1] $end
$var wire 1 u# s_axis_TKEEP_int_regslice [0] $end
$var wire 1 v# s_axis_TLAST $end
$var wire 1 w# s_axis_TLAST_int_regslice $end
$var wire 1 ^! s_axis_TREADY $end
$var wire 1 x# s_axis_TSTRB [3] $end
$var wire 1 y# s_axis_TSTRB [2] $end
$var wire 1 z# s_axis_TSTRB [1] $end
$var wire 1 {# s_axis_TSTRB [0] $end
$var wire 1 |# s_axis_TSTRB_int_regslice [3] $end
$var wire 1 }# s_axis_TSTRB_int_regslice [2] $end
$var wire 1 ~# s_axis_TSTRB_int_regslice [1] $end
$var wire 1 !$ s_axis_TSTRB_int_regslice [0] $end
$var wire 1 C" s_axis_TVALID $end
$var wire 1 "$ s_axis_TVALID_int_regslice $end
$var parameter 4 #$ ap_ST_fsm_pp0_stage0 $end
$var parameter 4 $$ ap_ST_fsm_pp0_stage1 $end
$var parameter 4 %$ ap_ST_fsm_pp0_stage2 $end
$var parameter 4 &$ ap_ST_fsm_pp0_stage3 $end
$var reg 4 '$ ap_CS_fsm [3:0] $end
$var reg 4 ($ ap_NS_fsm [3:0] $end
$var reg 1 )$ ap_block_pp0_stage0_01001 $end
$var reg 1 *$ ap_block_pp0_stage0_11001 $end
$var reg 1 +$ ap_block_pp0_stage0_subdone $end
$var reg 1 ,$ ap_block_pp0_stage1_01001 $end
$var reg 1 -$ ap_block_pp0_stage1_11001 $end
$var reg 1 .$ ap_block_pp0_stage1_subdone $end
$var reg 1 /$ ap_block_pp0_stage2_01001 $end
$var reg 1 0$ ap_block_pp0_stage2_11001 $end
$var reg 1 1$ ap_block_pp0_stage2_subdone $end
$var reg 1 2$ ap_block_pp0_stage3_01001 $end
$var reg 1 3$ ap_block_pp0_stage3_11001 $end
$var reg 1 4$ ap_block_pp0_stage3_subdone $end
$var reg 1 5$ ap_block_state1_pp0_stage0_iter0 $end
$var reg 1 6$ ap_block_state2_pp0_stage1_iter0 $end
$var reg 1 7$ ap_block_state3_pp0_stage2_iter0 $end
$var reg 1 8$ ap_block_state4_pp0_stage3_iter0 $end
$var reg 1 9$ ap_block_state5_pp0_stage0_iter1 $end
$var reg 1 :$ ap_enable_reg_pp0_iter1 $end
$var reg 1 ;$ ap_idle_pp0 $end
$var reg 1 <$ ap_rst_n_inv $end
$var reg 1 =$ find_kernel_block $end
$var reg 1 >$ m_axis_TDATA_blk_n $end
$var reg 32 ?$ m_axis_TDATA_int_regslice [31:0] $end
$var reg 1 @$ m_axis_TLAST_int_regslice [0:0] $end
$var reg 1 A$ m_axis_TVALID_int_regslice $end
$var reg 1 B$ s_axis_TDATA_blk_n $end
$var reg 1 C$ s_axis_TREADY_int_regslice $end

$scope module regslice_both_m_axis_V_data_V_U $end
$var wire 1 D$ B_V_data_1_ack_in $end
$var wire 1 E$ B_V_data_1_ack_out $end
$var wire 32 F$ B_V_data_1_data_in [31:0] $end
$var wire 1 G$ B_V_data_1_load_A $end
$var wire 1 H$ B_V_data_1_load_B $end
$var wire 1 I$ B_V_data_1_sel $end
$var wire 1 J$ B_V_data_1_state_cmp_full $end
$var wire 1 K$ B_V_data_1_vld_in $end
$var wire 1 L$ B_V_data_1_vld_out $end
$var wire 1 M$ B_V_data_1_vld_reg $end
$var wire 1 /# ack_in $end
$var wire 1 x ack_out $end
$var wire 1 _! ap_clk $end
$var wire 1 N$ ap_rst $end
$var wire 1 8# apdone_blk $end
$var wire 1 O$ data_in [31] $end
$var wire 1 P$ data_in [30] $end
$var wire 1 Q$ data_in [29] $end
$var wire 1 R$ data_in [28] $end
$var wire 1 S$ data_in [27] $end
$var wire 1 T$ data_in [26] $end
$var wire 1 U$ data_in [25] $end
$var wire 1 V$ data_in [24] $end
$var wire 1 W$ data_in [23] $end
$var wire 1 X$ data_in [22] $end
$var wire 1 Y$ data_in [21] $end
$var wire 1 Z$ data_in [20] $end
$var wire 1 [$ data_in [19] $end
$var wire 1 \$ data_in [18] $end
$var wire 1 ]$ data_in [17] $end
$var wire 1 ^$ data_in [16] $end
$var wire 1 _$ data_in [15] $end
$var wire 1 `$ data_in [14] $end
$var wire 1 a$ data_in [13] $end
$var wire 1 b$ data_in [12] $end
$var wire 1 c$ data_in [11] $end
$var wire 1 d$ data_in [10] $end
$var wire 1 e$ data_in [9] $end
$var wire 1 f$ data_in [8] $end
$var wire 1 g$ data_in [7] $end
$var wire 1 h$ data_in [6] $end
$var wire 1 i$ data_in [5] $end
$var wire 1 j$ data_in [4] $end
$var wire 1 k$ data_in [3] $end
$var wire 1 l$ data_in [2] $end
$var wire 1 m$ data_in [1] $end
$var wire 1 n$ data_in [0] $end
$var wire 1 <! data_out [31] $end
$var wire 1 =! data_out [30] $end
$var wire 1 >! data_out [29] $end
$var wire 1 ?! data_out [28] $end
$var wire 1 @! data_out [27] $end
$var wire 1 A! data_out [26] $end
$var wire 1 B! data_out [25] $end
$var wire 1 C! data_out [24] $end
$var wire 1 D! data_out [23] $end
$var wire 1 E! data_out [22] $end
$var wire 1 F! data_out [21] $end
$var wire 1 G! data_out [20] $end
$var wire 1 H! data_out [19] $end
$var wire 1 I! data_out [18] $end
$var wire 1 J! data_out [17] $end
$var wire 1 K! data_out [16] $end
$var wire 1 L! data_out [15] $end
$var wire 1 M! data_out [14] $end
$var wire 1 N! data_out [13] $end
$var wire 1 O! data_out [12] $end
$var wire 1 P! data_out [11] $end
$var wire 1 Q! data_out [10] $end
$var wire 1 R! data_out [9] $end
$var wire 1 S! data_out [8] $end
$var wire 1 T! data_out [7] $end
$var wire 1 U! data_out [6] $end
$var wire 1 V! data_out [5] $end
$var wire 1 W! data_out [4] $end
$var wire 1 X! data_out [3] $end
$var wire 1 Y! data_out [2] $end
$var wire 1 Z! data_out [1] $end
$var wire 1 [! data_out [0] $end
$var wire 1 o$ vld_in $end
$var wire 1 9# vld_out $end
$var parameter 32 p$ DataWidth $end
$var reg 32 q$ B_V_data_1_data_out [31:0] $end
$var reg 32 r$ B_V_data_1_payload_A [31:0] $end
$var reg 32 s$ B_V_data_1_payload_B [31:0] $end
$var reg 1 t$ B_V_data_1_sel_rd $end
$var reg 1 u$ B_V_data_1_sel_wr $end
$var reg 2 v$ B_V_data_1_state [1:0] $end
$upscope $end

$scope module regslice_both_m_axis_V_keep_V_U $end
$var wire 1 w$ B_V_data_1_ack_in $end
$var wire 1 x$ B_V_data_1_ack_out $end
$var wire 4 y$ B_V_data_1_data_in [3:0] $end
$var wire 1 z$ B_V_data_1_load_A $end
$var wire 1 {$ B_V_data_1_load_B $end
$var wire 1 |$ B_V_data_1_sel $end
$var wire 1 }$ B_V_data_1_state_cmp_full $end
$var wire 1 ~$ B_V_data_1_vld_in $end
$var wire 1 !% B_V_data_1_vld_out $end
$var wire 1 "% B_V_data_1_vld_reg $end
$var wire 1 :# ack_in $end
$var wire 1 x ack_out $end
$var wire 1 _! ap_clk $end
$var wire 1 #% ap_rst $end
$var wire 1 ;# apdone_blk $end
$var wire 1 +# data_in [3] $end
$var wire 1 ,# data_in [2] $end
$var wire 1 -# data_in [1] $end
$var wire 1 .# data_in [0] $end
$var wire 1 '# data_out [3] $end
$var wire 1 (# data_out [2] $end
$var wire 1 )# data_out [1] $end
$var wire 1 *# data_out [0] $end
$var wire 1 $% vld_in $end
$var wire 1 <# vld_out $end
$var parameter 32 %% DataWidth $end
$var reg 4 &% B_V_data_1_data_out [3:0] $end
$var reg 4 '% B_V_data_1_payload_A [3:0] $end
$var reg 4 (% B_V_data_1_payload_B [3:0] $end
$var reg 1 )% B_V_data_1_sel_rd $end
$var reg 1 *% B_V_data_1_sel_wr $end
$var reg 2 +% B_V_data_1_state [1:0] $end
$upscope $end

$scope module regslice_both_m_axis_V_last_V_U $end
$var wire 1 ,% B_V_data_1_ack_in $end
$var wire 1 -% B_V_data_1_ack_out $end
$var wire 1 .% B_V_data_1_data_in $end
$var wire 1 /% B_V_data_1_load_A $end
$var wire 1 0% B_V_data_1_load_B $end
$var wire 1 1% B_V_data_1_sel $end
$var wire 1 2% B_V_data_1_state_cmp_full $end
$var wire 1 3% B_V_data_1_vld_in $end
$var wire 1 4% B_V_data_1_vld_out $end
$var wire 1 5% B_V_data_1_vld_reg $end
$var wire 1 =# ack_in $end
$var wire 1 x ack_out $end
$var wire 1 _! ap_clk $end
$var wire 1 6% ap_rst $end
$var wire 1 ># apdone_blk $end
$var wire 1 7% data_in $end
$var wire 1 \! data_out $end
$var wire 1 8% vld_in $end
$var wire 1 ?# vld_out $end
$var parameter 32 9% DataWidth $end
$var reg 1 :% B_V_data_1_data_out [0:0] $end
$var reg 1 ;% B_V_data_1_payload_A [0:0] $end
$var reg 1 <% B_V_data_1_payload_B [0:0] $end
$var reg 1 =% B_V_data_1_sel_rd $end
$var reg 1 >% B_V_data_1_sel_wr $end
$var reg 2 ?% B_V_data_1_state [1:0] $end
$upscope $end

$scope module regslice_both_m_axis_V_strb_V_U $end
$var wire 1 @% B_V_data_1_ack_in $end
$var wire 1 A% B_V_data_1_ack_out $end
$var wire 4 B% B_V_data_1_data_in [3:0] $end
$var wire 1 C% B_V_data_1_load_A $end
$var wire 1 D% B_V_data_1_load_B $end
$var wire 1 E% B_V_data_1_sel $end
$var wire 1 F% B_V_data_1_state_cmp_full $end
$var wire 1 G% B_V_data_1_vld_in $end
$var wire 1 H% B_V_data_1_vld_out $end
$var wire 1 I% B_V_data_1_vld_reg $end
$var wire 1 @# ack_in $end
$var wire 1 x ack_out $end
$var wire 1 _! ap_clk $end
$var wire 1 J% ap_rst $end
$var wire 1 A# apdone_blk $end
$var wire 1 4# data_in [3] $end
$var wire 1 5# data_in [2] $end
$var wire 1 6# data_in [1] $end
$var wire 1 7# data_in [0] $end
$var wire 1 0# data_out [3] $end
$var wire 1 1# data_out [2] $end
$var wire 1 2# data_out [1] $end
$var wire 1 3# data_out [0] $end
$var wire 1 K% vld_in $end
$var wire 1 B# vld_out $end
$var parameter 32 L% DataWidth $end
$var reg 4 M% B_V_data_1_data_out [3:0] $end
$var reg 4 N% B_V_data_1_payload_A [3:0] $end
$var reg 4 O% B_V_data_1_payload_B [3:0] $end
$var reg 1 P% B_V_data_1_sel_rd $end
$var reg 1 Q% B_V_data_1_sel_wr $end
$var reg 2 R% B_V_data_1_state [1:0] $end
$upscope $end

$scope module regslice_both_s_axis_V_data_V_U $end
$var wire 1 S% B_V_data_1_ack_in $end
$var wire 1 T% B_V_data_1_ack_out $end
$var wire 32 U% B_V_data_1_data_in [31:0] $end
$var wire 1 V% B_V_data_1_load_A $end
$var wire 1 W% B_V_data_1_load_B $end
$var wire 1 X% B_V_data_1_sel $end
$var wire 1 Y% B_V_data_1_state_cmp_full $end
$var wire 1 Z% B_V_data_1_vld_in $end
$var wire 1 [% B_V_data_1_vld_out $end
$var wire 1 \% B_V_data_1_vld_reg $end
$var wire 1 C# ack_in $end
$var wire 1 ]% ack_out $end
$var wire 1 _! ap_clk $end
$var wire 1 ^% ap_rst $end
$var wire 1 D# apdone_blk $end
$var wire 1 #" data_in [31] $end
$var wire 1 $" data_in [30] $end
$var wire 1 %" data_in [29] $end
$var wire 1 &" data_in [28] $end
$var wire 1 '" data_in [27] $end
$var wire 1 (" data_in [26] $end
$var wire 1 )" data_in [25] $end
$var wire 1 *" data_in [24] $end
$var wire 1 +" data_in [23] $end
$var wire 1 ," data_in [22] $end
$var wire 1 -" data_in [21] $end
$var wire 1 ." data_in [20] $end
$var wire 1 /" data_in [19] $end
$var wire 1 0" data_in [18] $end
$var wire 1 1" data_in [17] $end
$var wire 1 2" data_in [16] $end
$var wire 1 3" data_in [15] $end
$var wire 1 4" data_in [14] $end
$var wire 1 5" data_in [13] $end
$var wire 1 6" data_in [12] $end
$var wire 1 7" data_in [11] $end
$var wire 1 8" data_in [10] $end
$var wire 1 9" data_in [9] $end
$var wire 1 :" data_in [8] $end
$var wire 1 ;" data_in [7] $end
$var wire 1 <" data_in [6] $end
$var wire 1 =" data_in [5] $end
$var wire 1 >" data_in [4] $end
$var wire 1 ?" data_in [3] $end
$var wire 1 @" data_in [2] $end
$var wire 1 A" data_in [1] $end
$var wire 1 B" data_in [0] $end
$var wire 1 N# data_out [31] $end
$var wire 1 O# data_out [30] $end
$var wire 1 P# data_out [29] $end
$var wire 1 Q# data_out [28] $end
$var wire 1 R# data_out [27] $end
$var wire 1 S# data_out [26] $end
$var wire 1 T# data_out [25] $end
$var wire 1 U# data_out [24] $end
$var wire 1 V# data_out [23] $end
$var wire 1 W# data_out [22] $end
$var wire 1 X# data_out [21] $end
$var wire 1 Y# data_out [20] $end
$var wire 1 Z# data_out [19] $end
$var wire 1 [# data_out [18] $end
$var wire 1 \# data_out [17] $end
$var wire 1 ]# data_out [16] $end
$var wire 1 ^# data_out [15] $end
$var wire 1 _# data_out [14] $end
$var wire 1 `# data_out [13] $end
$var wire 1 a# data_out [12] $end
$var wire 1 b# data_out [11] $end
$var wire 1 c# data_out [10] $end
$var wire 1 d# data_out [9] $end
$var wire 1 e# data_out [8] $end
$var wire 1 f# data_out [7] $end
$var wire 1 g# data_out [6] $end
$var wire 1 h# data_out [5] $end
$var wire 1 i# data_out [4] $end
$var wire 1 j# data_out [3] $end
$var wire 1 k# data_out [2] $end
$var wire 1 l# data_out [1] $end
$var wire 1 m# data_out [0] $end
$var wire 1 C" vld_in $end
$var wire 1 "$ vld_out $end
$var parameter 32 _% DataWidth $end
$var reg 32 `% B_V_data_1_data_out [31:0] $end
$var reg 32 a% B_V_data_1_payload_A [31:0] $end
$var reg 32 b% B_V_data_1_payload_B [31:0] $end
$var reg 1 c% B_V_data_1_sel_rd $end
$var reg 1 d% B_V_data_1_sel_wr $end
$var reg 2 e% B_V_data_1_state [1:0] $end
$upscope $end

$scope module regslice_both_s_axis_V_keep_V_U $end
$var wire 1 f% B_V_data_1_ack_in $end
$var wire 1 g% B_V_data_1_ack_out $end
$var wire 4 h% B_V_data_1_data_in [3:0] $end
$var wire 1 i% B_V_data_1_load_A $end
$var wire 1 j% B_V_data_1_load_B $end
$var wire 1 k% B_V_data_1_sel $end
$var wire 1 l% B_V_data_1_state_cmp_full $end
$var wire 1 m% B_V_data_1_vld_in $end
$var wire 1 n% B_V_data_1_vld_out $end
$var wire 1 o% B_V_data_1_vld_reg $end
$var wire 1 E# ack_in $end
$var wire 1 p% ack_out $end
$var wire 1 _! ap_clk $end
$var wire 1 q% ap_rst $end
$var wire 1 F# apdone_blk $end
$var wire 1 n# data_in [3] $end
$var wire 1 o# data_in [2] $end
$var wire 1 p# data_in [1] $end
$var wire 1 q# data_in [0] $end
$var wire 1 r# data_out [3] $end
$var wire 1 s# data_out [2] $end
$var wire 1 t# data_out [1] $end
$var wire 1 u# data_out [0] $end
$var wire 1 C" vld_in $end
$var wire 1 G# vld_out $end
$var parameter 32 r% DataWidth $end
$var reg 4 s% B_V_data_1_data_out [3:0] $end
$var reg 4 t% B_V_data_1_payload_A [3:0] $end
$var reg 4 u% B_V_data_1_payload_B [3:0] $end
$var reg 1 v% B_V_data_1_sel_rd $end
$var reg 1 w% B_V_data_1_sel_wr $end
$var reg 2 x% B_V_data_1_state [1:0] $end
$upscope $end

$scope module regslice_both_s_axis_V_last_V_U $end
$var wire 1 y% B_V_data_1_ack_in $end
$var wire 1 z% B_V_data_1_ack_out $end
$var wire 1 {% B_V_data_1_data_in $end
$var wire 1 |% B_V_data_1_load_A $end
$var wire 1 }% B_V_data_1_load_B $end
$var wire 1 ~% B_V_data_1_sel $end
$var wire 1 !& B_V_data_1_state_cmp_full $end
$var wire 1 "& B_V_data_1_vld_in $end
$var wire 1 #& B_V_data_1_vld_out $end
$var wire 1 $& B_V_data_1_vld_reg $end
$var wire 1 H# ack_in $end
$var wire 1 %& ack_out $end
$var wire 1 _! ap_clk $end
$var wire 1 && ap_rst $end
$var wire 1 I# apdone_blk $end
$var wire 1 v# data_in $end
$var wire 1 w# data_out $end
$var wire 1 C" vld_in $end
$var wire 1 J# vld_out $end
$var parameter 32 '& DataWidth $end
$var reg 1 (& B_V_data_1_data_out [0:0] $end
$var reg 1 )& B_V_data_1_payload_A [0:0] $end
$var reg 1 *& B_V_data_1_payload_B [0:0] $end
$var reg 1 +& B_V_data_1_sel_rd $end
$var reg 1 ,& B_V_data_1_sel_wr $end
$var reg 2 -& B_V_data_1_state [1:0] $end
$upscope $end

$scope module regslice_both_s_axis_V_strb_V_U $end
$var wire 1 .& B_V_data_1_ack_in $end
$var wire 1 /& B_V_data_1_ack_out $end
$var wire 4 0& B_V_data_1_data_in [3:0] $end
$var wire 1 1& B_V_data_1_load_A $end
$var wire 1 2& B_V_data_1_load_B $end
$var wire 1 3& B_V_data_1_sel $end
$var wire 1 4& B_V_data_1_state_cmp_full $end
$var wire 1 5& B_V_data_1_vld_in $end
$var wire 1 6& B_V_data_1_vld_out $end
$var wire 1 7& B_V_data_1_vld_reg $end
$var wire 1 K# ack_in $end
$var wire 1 8& ack_out $end
$var wire 1 _! ap_clk $end
$var wire 1 9& ap_rst $end
$var wire 1 L# apdone_blk $end
$var wire 1 x# data_in [3] $end
$var wire 1 y# data_in [2] $end
$var wire 1 z# data_in [1] $end
$var wire 1 {# data_in [0] $end
$var wire 1 |# data_out [3] $end
$var wire 1 }# data_out [2] $end
$var wire 1 ~# data_out [1] $end
$var wire 1 !$ data_out [0] $end
$var wire 1 C" vld_in $end
$var wire 1 M# vld_out $end
$var parameter 32 :& DataWidth $end
$var reg 4 ;& B_V_data_1_data_out [3:0] $end
$var reg 4 <& B_V_data_1_payload_A [3:0] $end
$var reg 4 =& B_V_data_1_payload_B [3:0] $end
$var reg 1 >& B_V_data_1_sel_rd $end
$var reg 1 ?& B_V_data_1_sel_wr $end
$var reg 2 @& B_V_data_1_state [1:0] $end
$upscope $end
$upscope $end

$scope module fifo2axis_0 $end
$var wire 1 _! clk $end
$var wire 1 E" din [31] $end
$var wire 1 F" din [30] $end
$var wire 1 G" din [29] $end
$var wire 1 H" din [28] $end
$var wire 1 I" din [27] $end
$var wire 1 J" din [26] $end
$var wire 1 K" din [25] $end
$var wire 1 L" din [24] $end
$var wire 1 M" din [23] $end
$var wire 1 N" din [22] $end
$var wire 1 O" din [21] $end
$var wire 1 P" din [20] $end
$var wire 1 Q" din [19] $end
$var wire 1 R" din [18] $end
$var wire 1 S" din [17] $end
$var wire 1 T" din [16] $end
$var wire 1 U" din [15] $end
$var wire 1 V" din [14] $end
$var wire 1 W" din [13] $end
$var wire 1 X" din [12] $end
$var wire 1 Y" din [11] $end
$var wire 1 Z" din [10] $end
$var wire 1 [" din [9] $end
$var wire 1 \" din [8] $end
$var wire 1 ]" din [7] $end
$var wire 1 ^" din [6] $end
$var wire 1 _" din [5] $end
$var wire 1 `" din [4] $end
$var wire 1 a" din [3] $end
$var wire 1 b" din [2] $end
$var wire 1 c" din [1] $end
$var wire 1 d" din [0] $end
$var wire 1 g" rst $end
$var wire 1 \! s_axis_tlast $end
$var wire 1 ^! s_axis_tready $end
$var wire 1 h" start $end
$var wire 1 D" start_accel $end
$var wire 1 i" write $end
$var parameter 32 A& DATA_WIDTH $end
$var parameter 32 B& DEPTH $end
$var parameter 3 C& DONE $end
$var parameter 3 D& IDLE $end
$var parameter 3 E& SEND $end
$var parameter 32 F& THRESHOLD $end
$var parameter 3 G& WAIT_START $end
$var parameter 3 H& WRITE_FIFO $end
$var reg 2 I& buffer_index [1:0] $end
$var reg 3 J& next_state [2:0] $end
$var reg 32 K& s_axis_tdata [31:0] $end
$var reg 1 L& s_axis_tvalid $end
$var reg 2 M& send_index [1:0] $end
$var reg 3 N& state [2:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
x)
x(
x'
x&
x%
x$
x#
0"
0x
0y
x;!
x:!
x9!
x8!
x7!
x6!
x5!
x4!
x3!
x2!
x1!
x0!
x/!
x.!
x-!
x,!
x+!
x*!
x)!
x(!
x'!
x&!
x%!
x$!
x#!
x"!
x!!
x~
x}
x|
x{
xz
x[!
xZ!
xY!
xX!
xW!
xV!
xU!
xT!
xS!
xR!
xQ!
xP!
xO!
xN!
xM!
xL!
xK!
xJ!
xI!
xH!
xG!
xF!
xE!
xD!
xC!
xB!
xA!
x@!
x?!
x>!
x=!
x<!
x\!
0]!
1^!
1_!
xB"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
0C"
0D"
xd"
xc"
xb"
xa"
x`"
x_"
x^"
x]"
x\"
x["
xZ"
xY"
xX"
xW"
xV"
xU"
xT"
xS"
xR"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
0e"
1g"
0h"
0i"
1z"
0~"
0{"
0!#
0|"
0"#
0}"
0##
08#
0&#
1%#
0D#
xm#
xl#
xk#
xj#
xi#
xh#
xg#
xf#
xe#
xd#
xc#
xb#
xa#
x`#
x_#
x^#
x]#
x\#
x[#
xZ#
xY#
xX#
xW#
xV#
xU#
xT#
xS#
xR#
xQ#
xP#
xO#
xN#
0"$
1C#
0F#
xu#
xt#
xs#
xr#
0G#
1E#
0L#
x!$
x~#
x}#
x|#
0M#
1K#
0I#
xw#
0J#
1H#
1/#
09#
0;#
x.#
x-#
x,#
x+#
1:#
0<#
0A#
x7#
x6#
x5#
x4#
1@#
0B#
0>#
1=#
0?#
z$#
bx U%
z\%
0Z%
0[%
xX%
xV%
xW%
1Y%
1S%
0T%
b1111 h%
zo%
0m%
0n%
xk%
xi%
xj%
1l%
1f%
0g%
b1111 0&
z7&
05&
06&
x3&
x1&
x2&
14&
1.&
0/&
0{%
z$&
0"&
0#&
x~%
x|%
x}%
1!&
1y%
0z%
bx F$
zM$
0K$
0L$
xI$
xG$
xH$
1J$
1D$
0E$
bx y$
z"%
0~$
0!%
x|$
xz$
x{$
1}$
1w$
0x$
bx B%
zI%
0G%
0H%
xE%
xC%
xD%
1F%
1@%
0A%
x.%
z5%
03%
04%
x1%
x/%
x0%
12%
1,%
0-%
1k
0m
0j
1I
0l
xi
xh
xg
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xV
xU
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
0j"
0f"
0`!
x""
x!"
x~!
x}!
x|!
x{!
xz!
xy!
xx!
xw!
xv!
xu!
xt!
xs!
xr!
xq!
xp!
xo!
xn!
xm!
xl!
xk!
xj!
xi!
xh!
xg!
xf!
xe!
xd!
xc!
xb!
xa!
0v#
1x#
1y#
1z#
1{#
1n#
1o#
1p#
1q#
x*#
x)#
x(#
x'#
x3#
x2#
x1#
x0#
08%
x7%
16%
0K%
1J%
0$%
1#%
0o$
xn$
xm$
xl$
xk$
xj$
xi$
xh$
xg$
xf$
xe$
xd$
xc$
xb$
xa$
x`$
x_$
x^$
x]$
x\$
x[$
xZ$
xY$
xX$
xW$
xV$
xU$
xT$
xS$
xR$
xQ$
xP$
xO$
1N$
0%&
1&&
08&
19&
0p%
1q%
0]%
1^%
bx !
1C
bx D
0E
1F
0G
0H
0n
0o
0p
bx q
0r
1s
0t
b0 u
b1 v
b0 w
bx k"
b100000 l"
b1010 m"
b100 n"
b0 o"
b1 p"
b10 q"
b100 r"
b0 s"
0t"
bx u"
bx v"
0w"
b0 x"
bx y"
b1 #$
b10 $$
b100 %$
b1000 &$
b1 '$
b1 ($
1)$
1*$
1+$
1,$
1-$
1.$
1/$
10$
11$
12$
13$
14$
15$
16$
17$
18$
09$
0:$
0;$
1<$
0=$
1>$
bx ?$
bx @$
0A$
0B$
0C$
b100000 A&
b100 B&
b100 C&
b0 D&
b11 E&
b100 F&
b10 G&
b1 H&
b0 I&
bx J&
bx K&
0L&
b0 M&
b0 N&
b100000 p$
bx q$
bx r$
bx s$
xt$
xu$
b10 v$
b100 %%
bx &%
bx '%
bx (%
x)%
x*%
b10 +%
b1 9%
bx :%
bx ;%
bx <%
x=%
x>%
b10 ?%
b100 L%
bx M%
bx N%
bx O%
xP%
xQ%
b10 R%
b100000 _%
bx `%
bx a%
bx b%
xc%
xd%
b10 e%
b100 r%
bx s%
bx t%
bx u%
xv%
xw%
b10 x%
b1 '&
bx (&
bx )&
bx *&
x+&
x,&
b10 -&
b100 :&
bx ;&
bx <&
bx =&
x>&
x?&
b10 @&
$end
#5000
0C
0I
0_!
#10000
1G
0F
1C
1l
0k
1h"
1I
0g"
1_!
1D"
0<$
bx N&
b0 J&
bx x"
b0 v"
b10 v
0^%
0q%
09&
0&&
0N$
0#%
0J%
06%
0=%
0>%
b0 ?%
0P%
0Q%
b0 R%
0)%
0*%
b0 +%
0t$
0u$
b0 v$
0+&
0,&
b0 -&
0>&
0?&
b0 @&
0v%
0w%
b0 x%
0c%
0d%
b0 e%
00%
1/%
0,%
0D%
1C%
0@%
0{$
1z$
0w$
0H$
1G$
0D$
0}%
1|%
0y%
02&
11&
0.&
0j%
1i%
0f%
0W%
1V%
0S%
0C#
0E#
0K#
0H#
0:#
0@#
0=#
0^!
01%
0E%
0|$
0I$
0~%
03&
0k%
0X%
0/#
0>$
19$
#15000
0C
0I
0_!
#20000
b0 !
1C
1I
1_!
b0 x"
b0 N&
b1 J&
b11 v
b10010000101010011010100100100 D
0i
0h
1g
0f
0e
1d
0c
0b
1a
0`
1_
0^
1]
1\
0[
0Z
1Y
0X
1W
0V
1U
0T
0S
0R
0Q
1P
0O
0N
1M
0L
0K
0J
0d"
0c"
1b"
0a"
0`"
1_"
0^"
0]"
1\"
0["
1Z"
0Y"
1X"
1W"
0V"
0U"
1T"
0S"
1R"
0Q"
1P"
0O"
0N"
0M"
0L"
1K"
0J"
0I"
1H"
0G"
0F"
0E"
b1111 t%
b1111 <&
b0 )&
b10 ?%
b10 R%
b10 +%
b10 v$
b10 -&
b10 @&
b10 x%
b10 e%
1w"
1,%
1@%
1w$
1D$
1y%
1.&
1f%
1S%
1x
1E$
1x$
1A%
1-%
1C#
1E#
1K#
1H#
1:#
1@#
1=#
1^!
1/#
1>$
09$
b0 (&
b1111 ;&
b1111 s%
0w#
1u#
1t#
1s#
1r#
1!$
1~#
1}#
1|#
#25000
0C
0I
0_!
#30000
1C
1I
1_!
b1 N&
b0 v
0s
1H
1m
#35000
0C
0I
0_!
#40000
1C
1I
1_!
1t
1j"
1i"
#45000
0C
0I
0_!
#50000
1C
1I
1_!
0t
1o
b1 w
0j"
0i"
b1 I&
#55000
0C
0I
0_!
#60000
1C
1I
1_!
#65000
0C
0I
0_!
#70000
1C
1I
1_!
#75000
0C
0I
0_!
#80000
1C
1I
1_!
0H
b1 !
0m
#85000
0C
0I
0_!
#90000
1C
1I
1_!
0o
b11000000100010010101111010000001 D
1i
0g
0d
1b
0a
1`
1^
0\
1[
0W
1V
0U
1R
0P
0M
1K
1J
1d"
0b"
0_"
1]"
0\"
1["
1Y"
0W"
1V"
0R"
1Q"
0P"
1M"
0K"
0H"
1F"
1E"
#95000
0C
0I
0_!
#100000
1C
1I
1_!
1H
1m
#105000
0C
0I
0_!
#110000
1C
1I
1_!
1t
1j"
1i"
#115000
0C
0I
0_!
#120000
1C
1I
1_!
0t
1o
b10 w
0j"
0i"
b10 I&
#125000
0C
0I
0_!
#130000
1C
1I
1_!
#135000
0C
0I
0_!
#140000
1C
1I
1_!
#145000
0C
0I
0_!
#150000
1C
1I
1_!
0H
b10 !
0m
#155000
0C
0I
0_!
#160000
1C
1I
1_!
0o
b10000100100001001101011000001001 D
1f
0b
0^
1Z
0Y
1W
0V
1O
0K
1a"
0]"
0Y"
1U"
0T"
1R"
0Q"
1J"
0F"
#165000
0C
0I
0_!
#170000
1C
1I
1_!
1H
1m
#175000
0C
0I
0_!
#180000
1C
1I
1_!
1t
1j"
1i"
#185000
0C
0I
0_!
#190000
1C
1I
1_!
0t
1o
b11 w
0j"
0i"
b11 I&
#195000
0C
0I
0_!
#200000
1C
1I
1_!
#205000
0C
0I
0_!
#210000
1C
1I
1_!
#215000
0C
0I
0_!
#220000
1C
1I
1_!
0H
b11 !
0m
#225000
0C
0I
0_!
#230000
1C
1I
1_!
0o
b10110001111100000101011001100011 D
1h
0f
1d
1c
0Z
0W
1U
1T
1S
1Q
0O
1M
1L
1c"
0a"
1_"
1^"
0U"
0R"
1P"
1O"
1N"
1L"
0J"
1H"
1G"
#235000
0C
0I
0_!
#240000
1C
1I
1_!
1H
1m
#245000
0C
0I
0_!
#250000
1C
1I
1_!
1t
1j"
1i"
#255000
0C
0I
0_!
#260000
1C
1I
1_!
b10 J&
0t
1o
b0 w
0j"
0i"
#265000
0C
0I
0_!
#270000
1C
1I
1_!
b10 N&
b11 J&
#275000
0C
0I
0_!
#280000
1C
1I
1_!
b11 N&
b10010000101010011010100100100 K&
1L&
b1 M&
0B"
0A"
1@"
0?"
0>"
1="
0<"
0;"
1:"
09"
18"
07"
16"
15"
04"
03"
12"
01"
10"
0/"
1."
0-"
0,"
0+"
0*"
1)"
0("
0'"
1&"
0%"
0$"
0#"
1C"
1Z%
1m%
15&
1"&
b10010000101010011010100100100 U%
#285000
0C
0I
0_!
#290000
1C
1I
1_!
0H
b100 !
0m
b10010000101010011010100100100 a%
1,&
b11 -&
1?&
b11 @&
1w%
b11 x%
1d%
b11 e%
b11000000100010010101111010000001 K&
b10 M&
1D#
1F#
1L#
1I#
1}%
0|%
1#&
12&
01&
16&
1j%
0i%
1n%
1W%
0V%
1[%
1B"
0@"
0="
1;"
0:"
19"
17"
05"
14"
00"
1/"
0."
1+"
0)"
0&"
1$"
1#"
1G#
1M#
1J#
b11000000100010010101111010000001 U%
1"$
1B$
05$
06$
07$
08$
b10010000101010011010100100100 `%
0m#
0l#
1k#
0j#
0i#
1h#
0g#
0f#
1e#
0d#
1c#
0b#
1a#
1`#
0_#
0^#
1]#
0\#
1[#
0Z#
1Y#
0X#
0W#
0V#
0U#
1T#
0S#
0R#
1Q#
0P#
0O#
0N#
b11111111111111111111111111111111 y"
b100100101011001010100001001000 ?$
02$
03$
04$
0/$
00$
01$
0,$
0-$
0.$
0)$
0*$
0+$
0n$
0m$
0l$
1k$
0j$
0i$
1h$
0g$
0f$
0e$
0d$
1c$
0b$
1a$
0`$
1_$
0^$
0]$
1\$
1[$
0Z$
1Y$
0X$
1W$
0V$
0U$
1T$
0S$
0R$
1Q$
0P$
0O$
b100100101011001010100001001000 F$
b10 ($
1A$
1C$
b0 @$
1o$
1$%
1K%
18%
1]%
1p%
18&
1%&
07%
0.%
1z%
0I#
1/&
0L#
1g%
0F#
1T%
0D#
13%
1G%
1~$
1K$
#295000
0C
0I
0_!
#300000
1C
1I
1_!
0o
1u$
b11 v$
1*%
b11 +%
1Q%
b11 R%
1>%
b11 ?%
b0 ;%
b10 '$
b100100101011001010100001001000 r$
1c%
b11000000100010010101111010000001 b%
1v%
b1111 u%
1>&
b1111 =&
1+&
b0 *&
b10000100100001001101011000001001 K&
b11 M&
0d%
0w%
0?&
0,&
1H$
0G$
1L$
1{$
0z$
1!%
1D%
0C%
1H%
10%
0/%
14%
1?"
0;"
07"
13"
02"
10"
0/"
1("
0$"
0W%
1V%
0j%
1i%
02&
11&
0}%
1|%
1?#
1B#
1<#
19#
1]!
b10000100100001001101011000001001 U%
1{"
0z"
1X%
1k%
13&
1~%
b11000000100010010101111010000001 `%
b100100101011001010100001001000 q$
b100 ($
b0 :%
0[!
0Z!
0Y!
1X!
0W!
0V!
1U!
0T!
0S!
0R!
0Q!
1P!
0O!
1N!
0M!
1L!
0K!
0J!
1I!
1H!
0G!
1F!
0E!
1D!
0C!
0B!
1A!
0@!
0?!
1>!
0=!
0<!
0\!
1m#
0k#
0h#
1f#
0e#
1d#
1b#
0`#
1_#
0[#
1Z#
0Y#
1V#
0T#
0Q#
1O#
1N#
b11111111111111111111111111111111 y"
b10000001011110101001000100000011 ?$
1n$
1m$
0k$
0h$
1f$
0c$
1b$
0a$
1]$
0\$
1Z$
1X$
0W$
1V$
0T$
0Q$
1O$
b10000001011110101001000100000011 F$
#305000
0C
0I
0_!
#310000
1C
1I
1_!
b1 v"
b100 J&
b1 s"
b10000100100001001101011000001001 a%
1=%
b0 <%
1P%
1)%
1t$
b10000001011110101001000100000011 s$
1,&
1?&
1w%
1d%
b10110001111100000101011001100011 K&
0+&
0>&
0v%
0c%
b100 '$
0>%
0Q%
0*%
0u$
1}%
0|%
12&
01&
1j%
0i%
1W%
0V%
1A"
0?"
1="
1<"
03"
00"
1."
1-"
1,"
1*"
0("
1&"
1%"
00%
1/%
0D%
1C%
0{$
1z$
0H$
1G$
b10110001111100000101011001100011 U%
11%
1E%
1|$
1I$
0~%
03&
0k%
0X%
1|"
0{"
b1000 ($
b10000001011110101001000100000011 q$
b10000100100001001101011000001001 `%
1[!
1Z!
0X!
0U!
1S!
0P!
1O!
0N!
1J!
0I!
1G!
1E!
0D!
1C!
0A!
0>!
1<!
1j#
0f#
0b#
1^#
0]#
1[#
0Z#
1S#
0O#
b11111111111111111111111111111111 y"
b10010000011010110010000100100001 ?$
0m$
1i$
0b$
1a$
0_$
1^$
0Z$
0V$
1R$
b10010000011010110010000100100001 F$
#315000
0C
0I
0_!
#320000
1C
1I
1_!
b100 N&
b1 x"
b10010000011010110010000100100001 r$
b10110001111100000101011001100011 b%
1u$
1*%
1Q%
1>%
b1000 '$
1c%
1v%
1>&
1+&
0d%
0w%
0?&
0,&
0t$
0)%
0P%
0=%
0L&
b10 s"
1H$
0G$
1{$
0z$
1D%
0C%
10%
0/%
0W%
1V%
0j%
1i%
02&
11&
0}%
1|%
0C"
0Z%
0m%
05&
0"&
1}"
0|"
1X%
1k%
13&
1~%
0I$
0|$
0E%
01%
b1 @$
b1 ($
b10110001111100000101011001100011 `%
b10010000011010110010000100100001 q$
17%
0Z!
1V!
0O!
1N!
0L!
1K!
0G!
0C!
1?!
1.%
1l#
0j#
1h#
1g#
0^#
0[#
1Y#
1X#
1W#
1U#
0S#
1Q#
1P#
b11111111111111111111111111111111 y"
b11000110011010100000111110001101 ?$
1l$
1k$
0i$
1g$
1e$
1d$
1c$
0a$
0^$
1U$
1T$
0R$
1P$
b11000110011010100000111110001101 F$
#325000
0C
0I
0_!
#330000
1C
1I
1_!
1:$
b10 -&
b10 @&
b10 x%
b10 e%
b10110001111100000101011001100011 a%
b1 <%
b11000110011010100000111110001101 s$
b11 s"
1=%
1P%
1)%
1t$
0+&
0>&
0v%
0c%
b1 '$
0>%
0Q%
0*%
0u$
0#&
06&
0n%
0[%
00%
1/%
0D%
1C%
0{$
1z$
0H$
1G$
0G#
0M#
0J#
11%
1E%
1|$
1I$
0~%
03&
0k%
0X%
0}"
1z"
0"$
15$
16$
17$
18$
b0 @$
0B$
b10 ($
b11000110011010100000111110001101 q$
b1 :%
1)$
1*$
1+$
07%
1Y!
1X!
0V!
1T!
1R!
1Q!
1P!
0N!
0K!
1B!
1A!
0?!
1=!
1\!
0.%
b1 ($
0A$
0C$
bx @$
12$
13$
14$
1/$
10$
11$
1,$
1-$
1.$
0o$
0$%
0K%
08%
0]%
0p%
08&
0%&
x7%
x.%
0z%
0/&
0g%
0T%
03%
0G%
0~$
0K$
#335000
0C
0I
0_!
#340000
1C
1I
1_!
b0 J&
b10 v"
b10 v$
b10 +%
b10 R%
b10 ?%
bx K&
b11000110011010100000111110001101 r$
bx ;%
0t$
0)%
0P%
0=%
b0 s"
0L$
0!%
0H%
04%
xB"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
x$"
x#"
0?#
0B#
0<#
09#
0]!
bx U%
0I$
0|$
0E%
01%
bx :%
x\!
#345000
0C
0I
0_!
#350000
1C
1I
1_!
b10 x"
b0 N&
b1 J&
bx a%
1t"
1y
1`!
1p
1"
b0 !
bx `%
xm#
xl#
xk#
xj#
xi#
xh#
xg#
xf#
xe#
xd#
xc#
xb#
xa#
x`#
x_#
x^#
x]#
x\#
x[#
xZ#
xY#
xX#
xW#
xV#
xU#
xT#
xS#
xR#
xQ#
xP#
xO#
xN#
b11111111111111111111111111111111 y"
bx ?$
xn$
xm$
xl$
xk$
xj$
xi$
xh$
xg$
xf$
xe$
xd$
xc$
xb$
xa$
x`$
x_$
x^$
x]$
x\$
x[$
xZ$
xY$
xX$
xW$
xV$
xU$
xT$
xS$
xR$
xQ$
xP$
xO$
bx F$
#355000
0C
0I
0_!
#360000
1C
1I
1_!
b1 N&
1E
1j
bx r$
bx q$
x[!
xZ!
xY!
xX!
xW!
xV!
xU!
xT!
xS!
xR!
xQ!
xP!
xO!
xN!
xM!
xL!
xK!
xJ!
xI!
xH!
xG!
xF!
xE!
xD!
xC!
xB!
xA!
x@!
x?!
x>!
x=!
x<!
#365000
0C
0I
0_!
#370000
1C
1I
1_!
1r
1f"
1e"
#375000
0C
0I
0_!
#380000
1C
1I
1_!
0r
1n
b1 u
0f"
0e"
b100100101011001010100001001000 u"
b1 s"
0;!
0:!
09!
18!
07!
06!
15!
04!
03!
02!
01!
10!
0/!
1.!
0-!
1,!
0+!
0*!
1)!
1(!
0'!
1&!
0%!
1$!
0#!
0"!
1!!
0~
0}
1|
0{
0z
0""
0!"
0~!
1}!
0|!
0{!
1z!
0y!
0x!
0w!
0v!
1u!
0t!
1s!
0r!
1q!
0p!
0o!
1n!
1m!
0l!
1k!
0j!
1i!
0h!
0g!
1f!
0e!
0d!
1c!
0b!
0a!
b100100101011001010100001001000 q
0B
0A
0@
1?
0>
0=
1<
0;
0:
09
08
17
06
15
04
13
02
01
10
1/
0.
1-
0,
1+
0*
0)
1(
0'
0&
1%
0$
0#
#385000
0C
0I
0_!
#390000
1C
1I
1_!
#395000
0C
0I
0_!
#400000
1C
1I
1_!
#405000
0C
0I
0_!
#410000
1C
1I
1_!
#415000
0C
0I
0_!
#420000
1C
1I
1_!
#425000
0C
0I
0_!
#430000
1C
1I
1_!
#435000
0C
0I
0_!
#440000
1C
1I
1_!
#445000
0C
0I
0_!
#450000
1C
1I
1_!
#455000
0C
0I
0_!
#460000
1C
1I
1_!
#465000
0C
0I
0_!
#470000
1C
1I
1_!
#475000
0C
0I
0_!
#480000
1C
1I
1_!
#485000
0C
0I
0_!
#490000
1C
1I
1_!
#495000
0C
0I
0_!
#500000
1C
1I
1_!
#505000
0C
0I
0_!
#510000
1C
1I
1_!
#515000
0C
0I
0_!
#520000
1C
1I
1_!
#525000
0C
0I
0_!
#530000
1C
1I
1_!
#535000
0C
0I
0_!
#540000
1C
1I
1_!
#545000
0C
0I
0_!
#550000
1C
1I
1_!
#555000
0C
0I
0_!
#560000
1C
1I
1_!
#565000
0C
0I
0_!
#570000
1C
1I
1_!
#575000
0C
0I
0_!
#580000
1C
1I
1_!
#585000
0C
0I
0_!
#590000
1C
1I
1_!
#595000
0C
0I
0_!
#600000
1C
1I
1_!
#605000
0C
0I
0_!
#610000
1C
1I
1_!
#615000
0C
0I
0_!
#620000
1C
1I
1_!
#625000
0C
0I
0_!
#630000
1C
1I
1_!
#635000
0C
0I
0_!
#640000
1C
1I
1_!
#645000
0C
0I
0_!
#650000
1C
1I
1_!
#655000
0C
0I
0_!
#660000
1C
1I
1_!
0E
b1 !
0j
#665000
0C
0I
0_!
#670000
1C
1I
1_!
0n
1E
1j
#675000
0C
0I
0_!
#680000
1C
1I
1_!
1r
1f"
1e"
#685000
0C
0I
0_!
#690000
1C
1I
1_!
0r
1n
b10 u
0f"
0e"
b10000001011110101001000100000011 u"
b10 s"
1;!
1:!
08!
05!
13!
00!
1/!
0.!
1*!
0)!
1'!
1%!
0$!
1#!
0!!
0|
1z
1""
1!"
0}!
0z!
1x!
0u!
1t!
0s!
1o!
0n!
1l!
1j!
0i!
1h!
0f!
0c!
1a!
b10000001011110101001000100000011 q
1B
1A
0?
0<
1:
07
16
05
11
00
1.
1,
0+
1*
0(
0%
1#
#695000
0C
0I
0_!
#700000
1C
1I
1_!
#705000
0C
0I
0_!
#710000
1C
1I
1_!
#715000
0C
0I
0_!
#720000
1C
1I
1_!
#725000
0C
0I
0_!
#730000
1C
1I
1_!
#735000
0C
0I
0_!
#740000
1C
1I
1_!
#745000
0C
0I
0_!
#750000
1C
1I
1_!
#755000
0C
0I
0_!
#760000
1C
1I
1_!
#765000
0C
0I
0_!
#770000
1C
1I
1_!
#775000
0C
0I
0_!
#780000
1C
1I
1_!
#785000
0C
0I
0_!
#790000
1C
1I
1_!
#795000
0C
0I
0_!
#800000
1C
1I
1_!
#805000
0C
0I
0_!
#810000
1C
1I
1_!
#815000
0C
0I
0_!
#820000
1C
1I
1_!
#825000
0C
0I
0_!
#830000
1C
1I
1_!
#835000
0C
0I
0_!
#840000
1C
1I
1_!
#845000
0C
0I
0_!
#850000
1C
1I
1_!
#855000
0C
0I
0_!
#860000
1C
1I
1_!
#865000
0C
0I
0_!
#870000
1C
1I
1_!
#875000
0C
0I
0_!
#880000
1C
1I
1_!
#885000
0C
0I
0_!
#890000
1C
1I
1_!
#895000
0C
0I
0_!
#900000
1C
1I
1_!
#905000
0C
0I
0_!
#910000
1C
1I
1_!
#915000
0C
0I
0_!
#920000
1C
1I
1_!
#925000
0C
0I
0_!
#930000
1C
1I
1_!
#935000
0C
0I
0_!
#940000
1C
1I
1_!
#945000
0C
0I
0_!
#950000
1C
1I
1_!
#955000
0C
0I
0_!
#960000
1C
1I
1_!
#965000
0C
0I
0_!
#970000
1C
1I
1_!
0E
b10 !
0j
#975000
0C
0I
0_!
#980000
1C
1I
1_!
0n
1E
1j
#985000
0C
0I
0_!
#990000
1C
1I
1_!
1r
1f"
1e"
#995000
0C
0I
0_!
#1000000
1C
1I
1_!
0r
1n
b11 u
0f"
0e"
b10010000011010110010000100100001 u"
b11 s"
0:!
16!
0/!
1.!
0,!
1+!
0'!
0#!
1}
0!"
1{!
0t!
1s!
0q!
1p!
0l!
0h!
1d!
b10010000011010110010000100100001 q
0A
1=
06
15
03
12
0.
0*
1&
#1005000
0C
0I
0_!
#1010000
1C
1I
1_!
#1015000
0C
0I
0_!
#1020000
1C
1I
1_!
#1025000
0C
0I
0_!
#1030000
1C
1I
1_!
#1035000
0C
0I
0_!
#1040000
1C
1I
1_!
#1045000
0C
0I
0_!
#1050000
1C
1I
1_!
#1055000
0C
0I
0_!
#1060000
1C
1I
1_!
#1065000
0C
0I
0_!
#1070000
1C
1I
1_!
#1075000
0C
0I
0_!
#1080000
1C
1I
1_!
#1085000
0C
0I
0_!
#1090000
1C
1I
1_!
#1095000
0C
0I
0_!
#1100000
1C
1I
1_!
#1105000
0C
0I
0_!
#1110000
1C
1I
1_!
#1115000
0C
0I
0_!
#1120000
1C
1I
1_!
#1125000
0C
0I
0_!
#1130000
1C
1I
1_!
#1135000
0C
0I
0_!
#1140000
1C
1I
1_!
#1145000
0C
0I
0_!
#1150000
1C
1I
1_!
#1155000
0C
0I
0_!
#1160000
1C
1I
1_!
#1165000
0C
0I
0_!
#1170000
1C
1I
1_!
#1175000
0C
0I
0_!
#1180000
1C
1I
1_!
#1185000
0C
0I
0_!
#1190000
1C
1I
1_!
#1195000
0C
0I
0_!
#1200000
1C
1I
1_!
#1205000
0C
0I
0_!
#1210000
1C
1I
1_!
#1215000
0C
0I
0_!
#1220000
1C
1I
1_!
#1225000
0C
0I
0_!
#1230000
1C
1I
1_!
#1235000
0C
0I
0_!
#1240000
1C
1I
1_!
#1245000
0C
0I
0_!
#1250000
1C
1I
1_!
#1255000
0C
0I
0_!
#1260000
1C
1I
1_!
#1265000
0C
0I
0_!
#1270000
1C
1I
1_!
#1275000
0C
0I
0_!
#1280000
1C
1I
1_!
0E
b11 !
0j
#1285000
0C
0I
0_!
#1290000
1C
1I
1_!
0n
1E
1j
#1295000
0C
0I
0_!
#1300000
1C
1I
1_!
1r
1f"
1e"
#1305000
0C
0I
0_!
#1310000
1C
1I
1_!
b100 v"
0r
1n
b0 u
1s
0f"
0e"
b11000110011010100000111110001101 u"
19!
18!
06!
14!
12!
11!
10!
0.!
0+!
1"!
1!!
0}
1{
1~!
1}!
0{!
1y!
1w!
1v!
1u!
0s!
0p!
1g!
1f!
0d!
1b!
b11000110011010100000111110001101 q
1@
1?
0=
1;
19
18
17
05
02
1)
1(
0&
1$
#1315000
0C
0I
0_!
#1320000
1C
1I
1_!
b100 x"
b0 v"
b1 v
bx u"
0t"
0w"
x;!
x:!
x9!
x8!
x7!
x6!
x5!
x4!
x3!
x2!
x1!
x0!
x/!
x.!
x-!
x,!
x+!
x*!
x)!
x(!
x'!
x&!
x%!
x$!
x#!
x"!
x!!
x~
x}
x|
x{
xz
0y
0x
0E$
0x$
0A%
0-%
0`!
0p
x""
x!"
x~!
x}!
x|!
x{!
xz!
xy!
xx!
xw!
xv!
xu!
xt!
xs!
xr!
xq!
xp!
xo!
xn!
xm!
xl!
xk!
xj!
xi!
xh!
xg!
xf!
xe!
xd!
xc!
xb!
xa!
bx q
0"
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
x)
x(
x'
x&
x%
x$
x#
#1325000
0C
0I
0_!
#1330000
1C
1I
1_!
b0 x"
b10 v
1w"
1x
1E$
1x$
1A%
1-%
#1335000
0C
0I
0_!
#1340000
1C
1I
1_!
b11 v
#1345000
0C
0I
0_!
#1350000
1C
1I
1_!
b0 v
0s
#1355000
0C
0I
0_!
#1360000
1C
1I
1_!
#1365000
0C
0I
0_!
#1370000
1C
1I
1_!
#1375000
0C
0I
0_!
#1380000
1C
1I
1_!
#1385000
0C
0I
0_!
#1390000
1C
1I
1_!
#1395000
0C
0I
0_!
#1400000
1C
1I
1_!
#1405000
0C
0I
0_!
#1410000
1C
1I
1_!
#1415000
0C
0I
0_!
#1420000
1C
1I
1_!
#1425000
0C
0I
0_!
#1430000
1C
1I
1_!
#1435000
0C
0I
0_!
#1440000
1C
1I
1_!
#1445000
0C
0I
0_!
#1450000
1C
1I
1_!
#1455000
0C
0I
0_!
#1460000
1C
1I
1_!
#1465000
0C
0I
0_!
#1470000
1C
1I
1_!
#1475000
0C
0I
0_!
#1480000
1C
1I
1_!
#1485000
0C
0I
0_!
#1490000
1C
1I
1_!
#1495000
0C
0I
0_!
#1500000
1C
1I
1_!
#1505000
0C
0I
0_!
#1510000
1C
1I
1_!
#1515000
0C
0I
0_!
#1520000
1C
1I
1_!
#1525000
0C
0I
0_!
#1530000
1C
1I
1_!
#1535000
0C
0I
0_!
#1540000
1C
1I
1_!
#1545000
0C
0I
0_!
#1550000
1C
1I
1_!
#1555000
0C
0I
0_!
#1560000
1C
1I
1_!
#1565000
0C
0I
0_!
#1570000
1C
1I
1_!
#1575000
0C
0I
0_!
#1580000
1C
1I
1_!
#1585000
0C
0I
0_!
#1590000
1C
1I
1_!
0E
b100 !
0j
#1595000
0C
0I
0_!
#1600000
1C
1I
1_!
#1605000
0C
0I
0_!
#1610000
1C
1I
1_!
#1615000
0C
0I
0_!
#1620000
1C
1I
1_!
#1625000
0C
0I
0_!
#1630000
1C
1I
1_!
#1635000
0C
0I
0_!
#1640000
1C
1I
1_!
#1645000
0C
0I
0_!
#1650000
1C
1I
1_!
#1655000
0C
0I
0_!
#1660000
1C
1I
1_!
#1665000
0C
0I
0_!
#1670000
1C
1I
1_!
#1675000
0C
0I
0_!
#1680000
1C
1I
1_!
#1685000
0C
0I
0_!
